<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

					<!--  
						 ____  _                 _                     
						|  _ \| |_   _ _ __ ___ | |__   ___ _ __ _   _ 
						| |_) | | | | | '_ ` _ \| '_ \ / _ \ '__| | | |
						|  __/| | |_| | | | | | | |_) |  __/ |  | |_| |
						|_|   |_|\__,_|_| |_| |_|_.__/ \___|_|   \__, |
						                                         |___/ 
					-->
	<!-- setup hibernate session factory -->
   <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>

        <property name="annotatedClasses">
            <list>
            	<value>org.alienlabs.hatchetharry.model.MagicCard</value>
           <!--     <value>org.alienlabs.ajax.model.Game</value>
				<value>org.alienlabs.ajax.model.Player</value>
                <value>org.alienlabs.ajax.model.User</value>
                <value>org.alienlabs.ajax.model.Login</value>-->
            </list> 
        </property>

		<property name="hibernateProperties">
			<props>
				<!--  create= provide data at start-up by dropping tables, update= no start-up data model modification -->
				<prop key="hibernate.hbm2ddl.auto">create</prop>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.connection.pool_size">5</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cglib.use_reflection_optimizer">true</prop>
            	<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
            	<prop key="hibernate.hibernate.cache.use_query_cache">true</prop>
            	<prop key="validation.query">select 1</prop>
			</props>
		</property>
	</bean>

	<!-- setup transaction manager	-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
       <property name="sessionFactory"><ref bean="sessionFactory"/></property>
    </bean>



					<!-- 
						 ____               _     _                      
						|  _ \ ___ _ __ ___(_)___| |_ ___ _ __   ___ ___ 
						| |_) / _ \ '__/ __| / __| __/ _ \ '_ \ / __/ _ \
						|  __/  __/ |  \__ \ \__ \ ||  __/ | | | (_|  __/
						|_|   \___|_|  |___/_|___/\__\___|_| |_|\___\___|
						                                                 
					 -->
	<!-- setup DAOs -->
<!--	<bean id="gameDaoTarget" class="org.alienlabs.ajax.persistence.dao.GameDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="playerDaoTarget" class="org.alienlabs.ajax.persistence.dao.PlayerDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="userDaoTarget" class="org.alienlabs.ajax.persistence.dao.UserDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>
	<bean id="loginDaoTarget" class="org.alienlabs.ajax.persistence.dao.LoginDaoImpl">
		<property name="sessionFactory" ref="sessionFactory"/>
	</bean>-->
	
	<!-- setup transactions -->

	<!-- this is a transactional proxy for DAOs which ensures proper transaction handling -->
<!--	<bean id="gameDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="gameDaoTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="save">PROPAGATION_REQUIRED</prop>
				<prop key="delete">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="playerDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="playerDaoTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="save">PROPAGATION_REQUIRED</prop>
				<prop key="delete">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="userDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="userDaoTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="save">PROPAGATION_REQUIRED</prop>
				<prop key="delete">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>
	<bean id="loginDao" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager" ref="transactionManager"/>
		<property name="target" ref="loginDaoTarget"/>
		<property name="transactionAttributes">
			<props>
				<prop key="save">PROPAGATION_REQUIRED</prop>
				<prop key="delete">PROPAGATION_REQUIRED</prop>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>	-->
	
	
	
					<!-- 
						 ____                  _               
						/ ___|  ___ _ ____   _(_) ___ ___  ___ 
						\___ \ / _ \ '__\ \ / / |/ __/ _ \/ __|
						 ___) |  __/ |   \ V /| | (_|  __/\__ \
						|____/ \___|_|    \_/ |_|\___\___||___/
						
					 -->
<!-- 	<bean id="persistenceService" class="org.alienlabs.ajax.service.PersistenceService">
		<property name="gameDao" ref="gameDao"/>
		<property name="playerDao" ref="playerDao"/>
		<property name="userDao" ref="userDao"/>
		<property name="loginDao" ref="loginDao"/>
	</bean>-->
</beans>
