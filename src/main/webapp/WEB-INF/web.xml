<?xml version="1.0" encoding="ISO-8859-1"?>
<web-app xmlns="http://java.sun.com/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
  version="3.0">

	<display-name>HatchetHarry</display-name>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>
	</context-param>
	
	<filter>
		<filter-name>opensessioninview</filter-name>
		<filter-class>
			org.springframework.orm.hibernate3.support.OpenSessionInViewFilter
		</filter-class>
		  <init-param>
		   <param-name>singleSession</param-name>
		   <param-value>true</param-value>
		  </init-param>
		  <init-param>
		   <param-name>flushMode</param-name>
		   <param-value>AUTO</param-value>
		  </init-param>
		  <init-param>
		   <param-name>sessionFactoryBeanName</param-name>
		   <param-value>sessionFactory</param-value>
		  </init-param>
	</filter>

	<filter-mapping>
		<filter-name>opensessioninview</filter-name>
		<url-pattern>/app/*</url-pattern>
		<dispatcher>FORWARD</dispatcher>
	</filter-mapping>
	
    <servlet>
        <description>MeteorServlet</description>
        <servlet-name>MeteorServlet</servlet-name>
        <servlet-class>org.atmosphere.cpr.AtmosphereServlet</servlet-class>
	  	<init-param>
			<param-name>applicationClassName</param-name>
			<param-value>org.alienlabs.hatchetharry.HatchetHarryApplication</param-value>
		</init-param>
	    <init-param>
            <param-name>org.atmosphere.useWebSocket</param-name>
            <param-value>true</param-value>
      </init-param>
      <init-param>
            <param-name>org.atmosphere.useNative</param-name>
            <param-value>true</param-value>
      </init-param>
      <!--<init-param>
			<param-name>org.atmosphere.cpr.CometSupport.maxInactiveActivity</param-name>
			<param-value>30000</param-value>
		</init-param>-->
		<init-param>
			<param-name>org.atmosphere.websocket.WebSocketProtocol</param-name>
			<param-value>org.atmosphere.websocket.protocol.EchoProtocol</param-value>
		</init-param>
      <init-param>
            <param-name>filterMappingUrlPattern</param-name>
            <param-value>/*</param-value>
      </init-param>
  <!--    <init-param>
            <param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
            <param-value>org.atmosphere.client.FormParamFilter,org.atmosphere.client.JavascriptClientFilter</param-value>
      </init-param> -->
        <init-param> 
	   		<param-name>defaultTestSuite</param-name>
	   		<param-value>org.alienlabs.hatchetharry.clientSideTest.AllMistletoeTests</param-value>
	    </init-param>
        <init-param>
        	<param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
        	<param-value>org.apache.wicket.atmosphere.TrackMessageSizeFilter</param-value>
      	</init-param>
        <init-param>
        	<param-name>org.atmosphere.cpr.broadcasterCacheClass</param-name>
        	<param-value>org.atmosphere.cache.SessionBroadcasterCache</param-value>
      	</init-param>
		<init-param>
          <param-name>org.atmosphere.cpr.sessionSupport</param-name>
          <param-value>true</param-value>
        </init-param>
	 	<!--<init-param>
          <param-name>org.atmosphere.cpr.broadcasterClass</param-name>
          <param-value>org.atmosphere.cpr.DefaultBroadcaster</param-value>
		</init-param>
     	<init-param>
        	<param-name>org.atmosphere.cpr.broadcastFilterClasses</param-name>
        	<param-value>org.atmosphere.client.TrackMessageSizeFilter</param-value>
      	</init-param>-->
		<init-param>
		    <param-name>org.atmosphere.cpr.broadcasterCacheClass</param-name>
		    <param-value>org.atmosphere.cache.HeaderBroadcasterCache</param-value>
		</init-param>
      	<load-on-startup>0</load-on-startup>  
		<async-supported>true</async-supported>
    </servlet> 
	
    <servlet-mapping>
        <servlet-name>MeteorServlet</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>

	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener
		</listener-class>
	</listener>
	
	<session-config>
  		<session-timeout>45</session-timeout>
		<tracking-mode>COOKIE</tracking-mode>
		<cookie-config>
			<http-only>false</http-only>
		</cookie-config>
	</session-config>
</web-app>